
import heapq
import sys

sys.setrecursionlimit(10**6)

Debug = True
# ------------------------------------------------------------------------------configure
SIZE = 370
PIVIOT = 160
N, M, T = map(int, input().split())
graph = [[0 for _ in range(SIZE)] for _ in range(SIZE)]

# ------------------------------------------------------------------------------input
nt = 0
active_q = []
dactive_q = []
gq = []
heapq.heapify(active_q)  # (활성시간,(-w값)(좌표),)
heapq.heapify(dactive_q)
heapq.heapify(gq)
# ------------------------------------------------------------------------------ DS

for i in range(N):
    row = list(map(int, input().split()))
    for j in range(M):
        graph[PIVIOT+i][PIVIOT+j] = row[j]
        if row[j] != 0:
            heapq.heappush(
                dactive_q, (graph[PIVIOT+i][PIVIOT+j]+nt, -graph[PIVIOT+i][PIVIOT+j], (PIVIOT + i, PIVIOT + j)))

# if Debug:
#     print("DEBUG")
#     for i in range(N):
#         for j in range(M):
#             print(graph[PIVIOT+i][PIVIOT+j], end=" ")
#         print()
# if Debug:
#     print("DEBUG")
#     print(dactive_q)
"""
비활성 상태는 주어진 weight 동안 대기
활성 상태는 주어진 weight를 주변에 확장
cell 의 정보는 , 시간 오름차, 가중치 내림차, 좌표
"""
# t를 주어진 시간동안 돌려 |

# dactive에서 nt인 녀석들을 빼서 active로 진화

dx = [0, 0, -1, 1]
dy = [1, -1, 0, 0]
while nt <= T:
    nt += 1  # 현재 시간 > 1시간 증가
    # active 번식
    while gq and gq[0][0] <= nt:
        cell = heapq.heappop(gq)
        for k in range(4):
            nx, ny = cell[2][0] + dx[k], cell[2][1] + dy[k]
            if graph[nx][ny] == 0:
                graph[nx][ny] = (-cell[1])
                heapq.heappush(
                    dactive_q, (nt+(-cell[1]), cell[1], (nx, ny)))

    while active_q and active_q[0][0] <= nt:
        cell = heapq.heappop(active_q)

    # dactive > active 화
    while dactive_q and dactive_q[0][0] <= nt:
        cell = heapq.heappop(dactive_q)
        # 시간 업데이트(현재시간 + 1), w,좌표는 그대로 | 퍼트릴 큐 | 유지 큐
        heapq.heappush(active_q, ((nt+(-cell[1])), cell[1], cell[2]))
        heapq.heappush(gq, ((nt+1), cell[1], cell[2]))
    if Debug:
        print("DEBUG> STATE RES")
        print(
            f" t :{nt} \n activeq :{active_q}/{len(active_q)} \n dactive_q : { dactive_q}/{len(dactive_q)} ")

if Debug:
    print("DEBUG> LEN")
    print(len(active_q))
    print(len(dactive_q))
print(len(active_q)+len(dactive_q))
"""


5

2 2 10
1 1
0 2

5 5 19
3 2 0 3 0 
0 3 0 0 0 
0 0 0 0 0 
0 0 1 0 0 
0 0 0 0 2

9 10 37
0 0 0 0 0 0 0 0 3 0 
0 0 0 0 0 0 0 0 5 3 
0 0 2 0 0 0 0 4 0 0 
3 0 0 0 0 0 4 0 0 0 
0 0 0 0 0 3 5 0 0 2 
0 0 0 0 0 0 0 0 0 5 
0 0 0 0 0 0 0 0 2 3 
0 0 0 0 0 0 0 0 0 0 
0 0 2 2 0 0 0 0 0 0 

20 18 83
0 0 0 0 0 0 0 0 0 0 0 2 0 0 6 0 0 0 
0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 
0 0 0 6 0 0 0 0 0 0 0 0 0 0 2 0 3 0 
4 0 2 0 0 0 0 0 0 0 0 0 5 0 0 0 0 3 
0 0 0 0 0 5 4 4 6 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0 2 0 2 6 0 0 0 0 0 4 0 0 
4 0 0 3 0 0 0 0 0 0 0 3 0 0 0 5 0 0 
0 0 0 0 0 0 0 2 2 0 0 0 0 3 0 0 0 0 
0 0 0 0 5 0 0 0 3 0 3 0 0 4 0 0 0 0 
0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 6 0 2 0 0 0 0 0 3 0 0 0 3 0 
0 5 2 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 
3 0 0 0 0 0 0 0 6 0 2 0 5 0 0 0 0 0 
5 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 6 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 4 0 0 0 0 0 0 0 0 0 0 2 0 0 0 
0 0 3 4 5 0 0 0 0 0 0 0 0 0 0 6 0 0 
2 0 0 0 0 3 0 0 0 0 0 0 0 0 0 5 0 0 
0 0 0 0 0 0 0 0 0 3 6 2 0 0 0 0 0 0 

49 43 283
0 6 0 0 0 10 0 0 0 0 0 0 9 0 0 0 0 0 0 0 0 0 0 4 0 8 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 
0 5 0 0 0 2 0 0 0 0 0 0 8 0 0 8 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 3 7 0 0 0 0 0 0 9 0 1 0 5 0 0 1 0 0 0 0 0 0 0 0 0 0 0 9 0 7 0 0 0 0 0 0 0 0 1 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 0 8 0 0 0 0 0 0 0 0 0 3 0 0 0 6 0 0 0 0 6 0 0 0 0 0 0 
7 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 0 0 0 0 8 0 0 0 0 0 0 0 0 1 0 0 
0 9 0 0 0 0 0 0 0 0 9 6 0 2 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 
0 0 0 0 1 0 0 0 0 0 0 3 0 0 0 0 0 0 5 0 10 0 0 0 0 0 0 0 0 0 9 4 0 0 0 0 0 0 9 0 9 0 8 
0 0 0 0 0 0 0 0 0 7 0 0 0 0 9 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0 0 0 0 0 0 0 0 3 2 0 1 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 
0 0 0 0 0 0 0 0 0 7 0 0 0 2 0 0 0 0 0 0 8 0 0 0 0 10 0 0 1 7 0 8 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 2 0 0 9 0 0 0 0 0 8 0 0 0 0 0 4 0 6 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 6 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 6 0 5 0 0 0 0 0 0 7 0 0 0 
8 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 0 0 0 0 0 0 5 8 
0 0 0 10 0 9 0 8 0 0 0 0 0 0 2 9 0 0 0 7 2 7 0 7 0 0 0 0 2 0 4 3 0 0 0 0 0 0 0 0 0 2 0 
1 0 0 0 0 0 0 4 9 1 0 0 0 0 0 0 0 0 0 5 0 0 0 0 6 0 0 5 0 0 0 0 0 0 0 0 0 0 0 3 3 0 0 
0 0 0 0 0 0 0 0 0 0 0 0 1 0 3 1 10 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 1 0 0 0 9 0 0 
0 0 0 0 0 0 0 10 0 0 0 0 0 0 9 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 0 0 1 3 0 0 
0 0 0 0 0 0 6 0 0 0 1 0 0 2 0 0 0 0 9 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 7 7 0 0 
0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 5 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 10 
0 0 0 0 9 0 8 0 0 0 0 0 0 4 0 0 0 10 8 0 0 0 0 0 0 10 0 0 0 5 0 0 0 0 0 0 0 1 0 0 10 4 7 
0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 4 0 7 0 0 0 0 0 3 0 
0 0 0 0 5 0 3 0 0 0 0 0 0 0 8 1 0 0 7 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 9 0 1 0 0 0 0 10 7 0 0 0 0 0 2 0 0 7 0 0 0 0 0 0 0 7 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 0 8 2 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 8 0 0 7 0 2 0 0 0 0 
0 8 0 0 0 0 0 0 0 0 3 0 0 1 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 5 0 9 0 0 0 0 0 
0 0 0 0 0 0 0 0 3 5 0 0 1 0 4 0 0 0 0 9 0 0 0 0 0 0 0 0 0 0 5 0 0 4 0 0 0 0 10 8 0 0 0 
0 0 0 0 0 0 0 0 4 0 0 7 10 0 10 0 0 0 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0 8 3 9 6 7 0 0 0 0 2 
0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 8 7 10 0 0 0 0 0 0 6 0 0 0 5 0 0 0 0 0 0 0 0 0 0 10 0 
7 0 0 0 8 0 0 0 8 9 0 0 0 0 0 0 9 0 0 0 0 0 0 0 0 6 0 0 5 0 0 0 0 0 0 0 0 0 0 3 0 0 0 
0 0 0 0 0 0 0 0 0 0 0 6 0 6 0 0 0 0 3 0 0 5 3 0 0 0 0 1 9 0 6 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 7 2 0 0 0 0 0 0 0 0 0 0 5 0 0 0 0 8 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 7 6 
0 9 0 0 0 0 0 0 0 0 0 3 0 9 2 0 0 0 4 0 2 9 2 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 8 0 0 0 0 
0 0 0 3 0 1 0 0 8 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 7 0 6 0 0 0 0 0 7 0 0 0 0 4 7 10 
1 0 0 0 5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 5 0 8 0 0 0 0 0 0 0 0 3 9 2 
5 0 0 0 0 0 0 0 0 0 1 0 0 1 0 0 0 0 6 0 0 0 0 0 0 0 0 9 0 8 0 0 0 0 0 0 0 3 0 0 0 0 0 
0 0 0 0 7 0 10 0 0 0 6 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 8 2 3 0 0 
0 0 0 0 0 5 0 0 6 0 0 3 0 0 0 0 0 8 0 0 6 0 0 0 8 0 0 5 0 0 0 0 8 0 0 0 0 0 0 0 5 0 1 
7 0 9 0 7 0 0 9 0 0 0 0 4 0 0 0 0 0 0 8 1 0 4 0 0 0 0 0 0 0 0 0 4 7 0 0 8 0 0 0 0 0 0 
0 0 0 1 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 2 3 1 0 0 4 0 3 10 0 0 0 5 
0 0 4 0 0 0 0 0 0 4 4 0 0 0 8 0 4 0 2 0 8 0 0 0 0 0 0 0 9 0 0 0 0 5 0 0 0 0 0 0 0 0 0 
0 0 8 0 7 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 6 0 0 0 0 1 0 0 0 0 4 3 
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 10 3 0 0 0 0 0 3 0 
0 0 2 0 0 0 0 0 8 5 0 0 0 0 0 0 0 0 0 0 0 0 4 8 0 0 0 0 0 1 0 5 0 0 0 0 2 3 9 0 0 0 0 
0 5 8 9 0 0 0 0 0 4 0 0 0 10 0 0 0 1 0 0 0 0 0 10 0 7 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
6 0 0 0 0 0 10 0 5 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 10 0 0 0 0 0 0 0 0 0 0 0 0 0 
0 0 0 0 0 0 9 0 0 0 0 0 0 2 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 2 4 0 
0 3 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 1 0 0 0 
0 0 0 9 0 0 0 0 4 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 9 0 0 0 0 0 0 0 0 0 0 0 5 0 0 0 9 2 0 
0 0 0 0 0 2 0 0 0 0 0 0 10 0 0 0 0 0 2 0 0 0 8 0 0 0 0 0 0 10 0 0 0 0 0 0 7 0 0 0 0 0 0 

"""
