import sys
import heapq
import re
import math
from collections import deque
from typing import *
from math import ceil

input = sys.stdin.readline

sys.setrecursionlimit(10**6)


# 나무 재테크
# NxN 크기의 땅 구매
# 1x1 칸 나눔, r,c 좌표 이용, (1,1) 시작
# 양분 조사, 처음에 모든칸에 5,
# M개의 나무구매, 한칸에 여러개 가능,

# 봄에는 나이만큼 양분먹고, 나이 +=1
# 나이가 어린 나무먼저 먹고, 못먹은 나무는 사망
# 여름 - 봄에 죽은 나무 > 양분, 양분 += 나이//2
# 가을 - 나무 나이 5배수 라면,인접한 8개 칸에 나이 1인 나무 탄생 (범위 밖은 안나옴)
# 겨울 - 로봇이 땅에 양분 추가

# K 년 지날때 살아 있는 나무의 개수
# ---
# 2차원 배열 - 양분,(나무 수),로봇이 주는 양분 데이터
# 딕셔너리 (좌표 가능 ?  ) - 나무 덱
# 죽은 나무 큐  - (좌표,나이)

# 입력받고, 양분은 5로 전부 N땅만큼 초기화
# (나무의 위치는 딕셔너리 저장)

# K번 while문 돌면서, 봄 여름 가을 겨울
# 봄 - 나무 dict keys 돌면서 양분 바닥날때까지 섭취, 못먹으면 pop
# 여름 - 죽은 나무 큐 돌면서 양분 보충
# 가을 - 나무 dict keys = 큐 나무 나이 > 인접 나무 탄생 ( ) 인접에서 2개씩 생겨날 수 도
# 겨울 - 행렬 덧셈

#! 한칸에대해 4계절 수행하는 경우 : 나무 확장시 따로 임시변수에 저장
#! 4계절에대해 모든 배열을 4번 순회하는 경우 : 시간초과?

"""
1 1 4 땅크기,나무,4년뒤
1 - 추가되는 양분
1 1 1 - (1,1)에 나이 1인 나무가 있다.
"""
